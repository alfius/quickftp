#!/usr/bin/env ruby

require 'ftpd'
require 'quickftp'
require 'pathname'
require 'logger'

trap('SIGINT') { throw :ctrl_c }

def get_argv(option)
  value = nil
  if option_index = ARGV.index(option)
    value = ARGV[option_index + 1]
    ARGV.slice!(option_index..option_index+1)
  end
  value
end

host = get_argv('-h')
port = get_argv('-p').to_i
user = get_argv('--user')
password = get_argv('--password')

if ARGV.any? {|f| f == '--help'}
  # help mode
  puts 'Usage:'
  puts '  quickftp [path/to/directory] [-h HOST] [-p PORT] [--user USER] [--password PASSWORD]'
else
  path = ARGV.first || '.'
  path = Pathname.new(path).realpath.to_s

  driver = Quickftp::Driver.new({ dir: path, user: user, password: password })
  server = Ftpd::FtpServer.new(driver)
  server.server_name = "Quickftp"
  server.server_version = Quickftp::VERSION
  server.log = Logger.new(STDOUT)
  server.interface = host if host
  server.port = port if port
  server.start

  puts "#{server.server_name} #{server.server_version}"
  puts "Server listening on #{server.interface}:#{server.bound_port}"
  puts "Serving all files under '#{path}'"
  puts "Press Ctrl+C to stop"
  begin
    sleep
  rescue Exception
  end
end
